{"ast":null,"code":"const getDistanceBetweenTwoPoints = (x1, y1, x2, y2) => {\n  return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n};\nconst getDistanceFromOriginToCornerProgress = (width, height, x1, y1, origin) => {\n  switch (origin) {\n    case 'left':\n      return x1 / width;\n    case 'right':\n      return 1 - x1 / width;\n    case 'top':\n      return y1 / height;\n    case 'bottom':\n      return 1 - y1 / height;\n    case 'center':\n      origin = [0.5, 0.5];\n      break;\n  }\n  const [x2Percentage, y2Percentage] = origin;\n  const x2 = width * x2Percentage;\n  const y2 = height * y2Percentage;\n  const distanceFromOrigin = getDistanceBetweenTwoPoints(x1, y1, x2, y2);\n  const x3 = x2 < width / 2 ? width : 0;\n  const y3 = y2 < height / 2 ? height : 0;\n  const maxDistanceToCorner = getDistanceBetweenTwoPoints(x2, y2, x3, y3);\n  return distanceFromOrigin / maxDistanceToCorner;\n};\nexport { getDistanceFromOriginToCornerProgress };","map":{"version":3,"names":["getDistanceBetweenTwoPoints","x1","y1","x2","y2","Math","sqrt","getDistanceFromOriginToCornerProgress","width","height","origin","x2Percentage","y2Percentage","distanceFromOrigin","x3","y3","maxDistanceToCorner"],"sources":["/Users/richardbrown/Desktop/react example/my-app/node_modules/@arwes/react-bgs/build/esm/Dots/getDistanceFromOriginToCornerProgress.js"],"sourcesContent":["const getDistanceBetweenTwoPoints = (x1, y1, x2, y2) => {\n    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n};\nconst getDistanceFromOriginToCornerProgress = (width, height, x1, y1, origin) => {\n    switch (origin) {\n        case 'left': return x1 / width;\n        case 'right': return 1 - x1 / width;\n        case 'top': return y1 / height;\n        case 'bottom': return 1 - y1 / height;\n        case 'center':\n            origin = [0.5, 0.5];\n            break;\n    }\n    const [x2Percentage, y2Percentage] = origin;\n    const x2 = width * x2Percentage;\n    const y2 = height * y2Percentage;\n    const distanceFromOrigin = getDistanceBetweenTwoPoints(x1, y1, x2, y2);\n    const x3 = x2 < width / 2 ? width : 0;\n    const y3 = y2 < height / 2 ? height : 0;\n    const maxDistanceToCorner = getDistanceBetweenTwoPoints(x2, y2, x3, y3);\n    return distanceFromOrigin / maxDistanceToCorner;\n};\nexport { getDistanceFromOriginToCornerProgress };\n"],"mappings":"AAAA,MAAMA,2BAA2B,GAAGA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,KAAK;EACpD,OAAOC,IAAI,CAACC,IAAI,CAAC,CAACH,EAAE,GAAGF,EAAE,KAAK,CAAC,GAAG,CAACG,EAAE,GAAGF,EAAE,KAAK,CAAC,CAAC;AACrD,CAAC;AACD,MAAMK,qCAAqC,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAER,EAAE,EAAEC,EAAE,EAAEQ,MAAM,KAAK;EAC7E,QAAQA,MAAM;IACV,KAAK,MAAM;MAAE,OAAOT,EAAE,GAAGO,KAAK;IAC9B,KAAK,OAAO;MAAE,OAAO,CAAC,GAAGP,EAAE,GAAGO,KAAK;IACnC,KAAK,KAAK;MAAE,OAAON,EAAE,GAAGO,MAAM;IAC9B,KAAK,QAAQ;MAAE,OAAO,CAAC,GAAGP,EAAE,GAAGO,MAAM;IACrC,KAAK,QAAQ;MACTC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;MACnB;EAAM;EAEd,MAAM,CAACC,YAAY,EAAEC,YAAY,CAAC,GAAGF,MAAM;EAC3C,MAAMP,EAAE,GAAGK,KAAK,GAAGG,YAAY;EAC/B,MAAMP,EAAE,GAAGK,MAAM,GAAGG,YAAY;EAChC,MAAMC,kBAAkB,GAAGb,2BAA2B,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACtE,MAAMU,EAAE,GAAGX,EAAE,GAAGK,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC;EACrC,MAAMO,EAAE,GAAGX,EAAE,GAAGK,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC;EACvC,MAAMO,mBAAmB,GAAGhB,2BAA2B,CAACG,EAAE,EAAEC,EAAE,EAAEU,EAAE,EAAEC,EAAE,CAAC;EACvE,OAAOF,kBAAkB,GAAGG,mBAAmB;AACnD,CAAC;AACD,SAAST,qCAAqC"},"metadata":{},"sourceType":"module","externalDependencies":[]}